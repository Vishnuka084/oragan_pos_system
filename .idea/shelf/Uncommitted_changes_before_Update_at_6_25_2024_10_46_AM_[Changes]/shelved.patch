Index: src/com/oragan/posSystem/controller/PurchaseOrderFormController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.oragan.posSystem.controller;\r\n\r\nimport com.oragan.posSystem.db.DBConnection;\r\nimport com.oragan.posSystem.entity.Customer;\r\nimport com.oragan.posSystem.entity.Item;\r\nimport com.oragan.posSystem.entity.OrderItem;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class PurchaseOrderFormController {\r\n    public ComboBox<String> cmbCustomerID;\r\n    public TextField txtCustomerName;\r\n    public TextField txtContactNumber;\r\n    public ComboBox<String> cmbItemCode;\r\n    public TextField txtItemName;\r\n    public TextField txtQtyOnHand;\r\n    public TextField txtCustomerAddress;\r\n    public TextField txtPrice;\r\n    public Label lblOrderID;\r\n    public TableColumn colItemCode;\r\n    public TableColumn colItemName;\r\n    public TableColumn colUnitPrice;\r\n    public TableColumn colQuantity;\r\n    public TableColumn colTotal;\r\n    public TextField txtQuantity;\r\n    public TableView tblCart;\r\n    public TextField txtTotal;\r\n    private List<Customer> customers;\r\n    private List<Item> items;\r\n    private ObservableList<OrderItem> cartItems;\r\n\r\n    public void initialize() {\r\n        customers = getAllCustomers();\r\n        for (Customer customer : customers) {\r\n            cmbCustomerID.getItems().add(customer.getCustomer_Id());\r\n        }\r\n        if (!customers.isEmpty()) {\r\n            cmbCustomerID.getSelectionModel().selectFirst();\r\n            setCustomerDetails(customers.get(0).getCustomer_Id());\r\n        }\r\n\r\n        items = getAllItems();\r\n        for (Item item : items) {\r\n            cmbItemCode.getItems().add(item.getItem_code());\r\n        }\r\n        if (!items.isEmpty()) {\r\n            cmbItemCode.getSelectionModel().selectFirst();\r\n            setItemDetails(items.get(0).getItem_code());\r\n        }\r\n\r\n        //generate  order Id\r\n        try {\r\n            String orderId = generateOrderId();\r\n            lblOrderID.setText(orderId);\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            System.err.println(\"Error generating order ID: \" + e.getMessage());\r\n        }\r\n\r\n        // Initialize cart table\r\n        cartItems = FXCollections.observableArrayList();\r\n        tblCart.setItems(cartItems);\r\n        colItemCode.setCellValueFactory(new PropertyValueFactory<>(\"item_code\"));\r\n        colItemName.setCellValueFactory(new PropertyValueFactory<>(\"item_name\"));\r\n        colQuantity.setCellValueFactory(new PropertyValueFactory<>(\"quantity\"));\r\n        colUnitPrice.setCellValueFactory(new PropertyValueFactory<>(\"price\"));\r\n        colTotal.setCellValueFactory(new PropertyValueFactory<>(\"total\"));\r\n\r\n    }\r\n\r\n    private String generateOrderId() throws SQLException, ClassNotFoundException {\r\n        String query = \"SELECT OrderID FROM 'Order' ORDER BY OrderID DESC LIMIT 1\";\r\n\r\n        try (Connection conn = DBConnection.getInstance().getConnection();\r\n             PreparedStatement ps = conn.prepareStatement(query);\r\n             ResultSet rs = ps.executeQuery()) {\r\n\r\n            if (rs.next()) {\r\n                String lastOrderId = rs.getString(\"OrderID\");\r\n                int lastIdNumber = Integer.parseInt(lastOrderId.replace(\"ORD-\", \"\"));\r\n                int newIdNumber = lastIdNumber + 1;\r\n                return String.format(\"ORD-%06d\", newIdNumber);\r\n            } else {\r\n                // If no orders exist, start with ORD-000001\r\n                return \"ORD-000001\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private void setItemDetails(String Item_code) {\r\n        for (Item item : items) {\r\n            if (item.getItem_code().equals(Item_code)) {\r\n                txtItemName.setText(item.getItem_name());\r\n                txtPrice.setText(String.valueOf(item.getPrice()));\r\n                txtQtyOnHand.setText(String.valueOf(item.getQty()));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private List<Item> getAllItems() {\r\n        List<Item> itemList = new ArrayList<>();\r\n        String query = \"SELECT * FROM items\";\r\n\r\n        try {\r\n            DBConnection dbConnection = DBConnection.getInstance();\r\n            if (dbConnection.isConnectionValid()) {\r\n                try (Connection conn = dbConnection.getConnection();\r\n                     PreparedStatement ps = conn.prepareStatement(query);\r\n                     ResultSet rs = ps.executeQuery()) {\r\n\r\n                    while (rs.next()) {\r\n                        Item item = new Item();\r\n                        item.setItem_code(rs.getString(\"Item_code\"));\r\n                        item.setItem_name(rs.getString(\"Item_name\"));\r\n                        item.setPrice(rs.getDouble(\"price\"));\r\n                        item.setQty(rs.getInt(\"qty\"));\r\n                        itemList.add(item);\r\n                    }\r\n                }\r\n            } else {\r\n                System.err.println(\"Database connection is not valid.\");\r\n            }\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            System.err.println(\"Error loading items: \" + e.getMessage());\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    private void setCustomerDetails(String customer_id) {\r\n        for (Customer customer : customers) {\r\n            if (customer.getCustomer_Id().equals(customer_id)) {\r\n                txtCustomerName.setText(customer.getCustomer_name());\r\n                txtCustomerAddress.setText(customer.getAddress());\r\n                txtContactNumber.setText(customer.getContact_number());\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private List<Customer> getAllCustomers() {\r\n        List<Customer> customerList = new ArrayList<>();\r\n        String query = \"SELECT * FROM customers\";\r\n\r\n        try {\r\n            DBConnection dbConnection = DBConnection.getInstance();\r\n            if (dbConnection.isConnectionValid()) {\r\n                try (Connection conn = dbConnection.getConnection();\r\n                     PreparedStatement ps = conn.prepareStatement(query);\r\n                     ResultSet rs = ps.executeQuery()) {\r\n\r\n                    while (rs.next()) {\r\n                        Customer customer = new Customer();\r\n                        customer.setCustomer_Id(rs.getString(\"customer_id\"));\r\n                        customer.setCustomer_name(rs.getString(\"customer_name\"));\r\n                        customer.setAddress(rs.getString(\"address\"));\r\n                        customer.setContact_number(rs.getString(\"contact_number\"));\r\n                        customerList.add(customer);\r\n                    }\r\n                }\r\n            } else {\r\n                System.err.println(\"Database connection is not valid.\");\r\n            }\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            System.err.println(\"Error loading customers: \" + e.getMessage());\r\n        }\r\n\r\n        return customerList;\r\n    }\r\n\r\n    public void cmbCustomerIDOnAction(ActionEvent actionEvent) {\r\n        String selectedCustomerId = cmbCustomerID.getSelectionModel().getSelectedItem();\r\n        setCustomerDetails(selectedCustomerId);\r\n    }\r\n\r\n    public void cmbItemCodeOnAction(ActionEvent actionEvent) {\r\n        String selectedItemCode = cmbItemCode.getSelectionModel().getSelectedItem();\r\n        setItemDetails(selectedItemCode);\r\n    }\r\n\r\n    public void btnAddCartOnAction(ActionEvent actionEvent) {\r\n        String itemCode = cmbItemCode.getSelectionModel().getSelectedItem();\r\n        String itemName = txtItemName.getText();\r\n        int quantity = Integer.parseInt(txtQuantity.getText());\r\n        double price = Double.parseDouble(txtPrice.getText());\r\n        String orderId = lblOrderID.getText();\r\n        double total = quantity * price;\r\n\r\n        OrderItem selectedItem = new OrderItem();\r\n        selectedItem.setItem_code(itemCode);\r\n        selectedItem.setItem_name(itemName);\r\n        selectedItem.setQuantity(quantity);\r\n        selectedItem.setPrice(price);\r\n        selectedItem.setTotal(total);\r\n\r\n        cartItems.add(selectedItem);\r\n        tblCart.refresh();\r\n        updateTotal();\r\n\r\n    }\r\n    public void  updateTotal(){\r\n        double total=0;\r\n        for(OrderItem orderitem:cartItems){\r\n            total+=orderitem.getTotal();\r\n        }\r\n        txtTotal.setText(String.valueOf(total));\r\n    }\r\n\r\n\r\n    public void btnPlaceOrderOnAction(ActionEvent actionEvent) {\r\n        String orderId = lblOrderID.getText();\r\n        String orderDate = getCurrentDateTime(); // Implement getCurrentDateTime() to get current date and time as a string\r\n        double total = Double.parseDouble(txtTotal.getText()); // Get total from txtTotal\r\n        String customerId = cmbCustomerID.getSelectionModel().getSelectedItem(); // Assuming CustomerID is an integer\r\n\r\n        String insertOrderQuery = \"INSERT INTO 'Order' (OrderID, OrderDate, Total, CustomerID) VALUES (?, ?, ?, ?)\";\r\n\r\n        try (Connection conn = DBConnection.getInstance().getConnection();\r\n             PreparedStatement ps = conn.prepareStatement(insertOrderQuery)) {\r\n\r\n            ps.setString(1, orderId);\r\n            ps.setString(2, orderDate);\r\n            ps.setDouble(3, total);\r\n            ps.setString(4, customerId);\r\n\r\n            int rowsInserted = ps.executeUpdate();\r\n            if (rowsInserted > 0) {\r\n                System.out.println(\"Order saved successfully.\");\r\n                saveOrderItems(orderId); // Call method to save order items\r\n                clearForm(); // Optional: Clear form after saving\r\n            } else {\r\n                System.err.println(\"Failed to save order.\");\r\n            }\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            System.err.println(\"Error saving order: \" + e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    //get Current date and time\r\n    private String getCurrentDateTime() {\r\n        LocalDateTime currentDateTime = LocalDateTime.now();\r\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\r\n        String formattedDateTime = currentDateTime.format(formatter);\r\n        return formattedDateTime;\r\n\r\n    }\r\n\r\n    private void saveOrderItems(String orderId) {\r\n\r\n        String insertOrderItemQuery = \"INSERT INTO 'OrderItem' (OrderID, Item_code, Item_name, Quantity, Price, Total) VALUES (?, ?, ?, ?, ?, ?)\";\r\n\r\n        try (Connection conn = DBConnection.getInstance().getConnection();\r\n             PreparedStatement ps = conn.prepareStatement(insertOrderItemQuery)) {\r\n\r\n            for (OrderItem orderItem : cartItems) {\r\n                ps.setString(1, orderId);\r\n                ps.setString(2, orderItem.getItem_code());\r\n                ps.setString(3, orderItem.getItem_name());\r\n                ps.setInt(4, orderItem.getQuantity());\r\n                ps.setDouble(5, orderItem.getPrice());\r\n                ps.setDouble(6, orderItem.getTotal());\r\n                ps.addBatch();\r\n            }\r\n\r\n            int[] rowsInserted = ps.executeBatch();\r\n            System.out.println(\"Inserted \" + rowsInserted.length + \" order items.\");\r\n\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            System.err.println(\"Error saving order items: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void clearForm() {\r\n        // Clear UI fields as needed\r\n        txtTotal.clear();\r\n        cartItems.clear();\r\n        tblCart.refresh();\r\n        // Clear other form fields as needed\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java b/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java
--- a/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java	(revision 2537afc1b0e2abee1f65134136e61062ec98763b)
+++ b/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java	(date 1719253460341)
@@ -197,9 +197,16 @@
         String itemName = txtItemName.getText();
         int quantity = Integer.parseInt(txtQuantity.getText());
         double price = Double.parseDouble(txtPrice.getText());
-        String orderId = lblOrderID.getText();
         double total = quantity * price;
 
+        // Validate if quantity is available
+        int qtyOnHand = Integer.parseInt(txtQtyOnHand.getText());
+        if (quantity > qtyOnHand) {
+            showAlert(Alert.AlertType.ERROR, "Error", "Insufficient quantity available.");
+            return;
+        }
+
+        // Create the OrderItem object
         OrderItem selectedItem = new OrderItem();
         selectedItem.setItem_code(itemCode);
         selectedItem.setItem_name(itemName);
@@ -207,6 +214,10 @@
         selectedItem.setPrice(price);
         selectedItem.setTotal(total);
 
+        // Update the quantity preview in the text field
+        txtQtyOnHand.setText(String.valueOf(qtyOnHand - quantity));
+
+        // Add item to cart
         cartItems.add(selectedItem);
         tblCart.refresh();
         updateTotal();
@@ -223,32 +234,62 @@
 
     public void btnPlaceOrderOnAction(ActionEvent actionEvent) {
         String orderId = lblOrderID.getText();
-        String orderDate = getCurrentDateTime(); // Implement getCurrentDateTime() to get current date and time as a string
-        double total = Double.parseDouble(txtTotal.getText()); // Get total from txtTotal
-        String customerId = cmbCustomerID.getSelectionModel().getSelectedItem(); // Assuming CustomerID is an integer
+        String orderDate = getCurrentDateTime();
+        double total = Double.parseDouble(txtTotal.getText());
+        String customerId = cmbCustomerID.getSelectionModel().getSelectedItem();
 
         String insertOrderQuery = "INSERT INTO 'Order' (OrderID, OrderDate, Total, CustomerID) VALUES (?, ?, ?, ?)";
+        String updateItemQuantityQuery = "UPDATE items SET qty = qty - ? WHERE Item_code = ?";
+
+        try (Connection conn = DBConnection.getInstance().getConnection()) {
+            // Start transaction
+            conn.setAutoCommit(false);
+
+            try (PreparedStatement psOrder = conn.prepareStatement(insertOrderQuery);
+                 PreparedStatement psUpdateItem = conn.prepareStatement(updateItemQuantityQuery)) {
+
+                // Insert order
+                psOrder.setString(1, orderId);
+                psOrder.setString(2, orderDate);
+                psOrder.setDouble(3, total);
+                psOrder.setString(4, customerId);
 
-        try (Connection conn = DBConnection.getInstance().getConnection();
-             PreparedStatement ps = conn.prepareStatement(insertOrderQuery)) {
+                int rowsInsertedOrder = psOrder.executeUpdate();
+                if (rowsInsertedOrder <= 0) {
+                    throw new SQLException("Failed to save order.");
+                }
 
-            ps.setString(1, orderId);
-            ps.setString(2, orderDate);
-            ps.setDouble(3, total);
-            ps.setString(4, customerId);
+                // Update item quantities and prepare order items insertion
+                for (OrderItem orderItem : cartItems) {
+                    psUpdateItem.setInt(1, orderItem.getQuantity());
+                    psUpdateItem.setString(2, orderItem.getItem_code());
+                    int rowsUpdatedItem = psUpdateItem.executeUpdate();
+                    if (rowsUpdatedItem <= 0) {
+                        throw new SQLException("Failed to update item quantity.");
+                    }
+                }
 
-            int rowsInserted = ps.executeUpdate();
-            if (rowsInserted > 0) {
+                // Save order items
+                saveOrderItems(conn, orderId);
+
+                // Commit transaction
+                conn.commit();
                 System.out.println("Order saved successfully.");
-                saveOrderItems(orderId); // Call method to save order items
-                clearForm(); // Optional: Clear form after saving
-            } else {
-                System.err.println("Failed to save order.");
+                showAlert(Alert.AlertType.INFORMATION, "Success", "Order updated successfully." + orderId);
+                clearForm();
+
+            } catch (SQLException e) {
+                conn.rollback();
+                System.err.println("Transaction rolled back: " + e.getMessage());
+                showAlert(Alert.AlertType.ERROR, "Error", "Failed to save order: " + e.getMessage());
+            } finally {
+                conn.setAutoCommit(true);
             }
+
         } catch (SQLException | ClassNotFoundException e) {
             System.err.println("Error saving order: " + e.getMessage());
+            showAlert(Alert.AlertType.ERROR, "Error", "Error saving order: " + e.getMessage());
         }
-
     }
 
     //get Current date and time
@@ -260,13 +301,10 @@
 
     }
 
-    private void saveOrderItems(String orderId) {
-
+    private void saveOrderItems(Connection conn, String orderId) throws SQLException {
         String insertOrderItemQuery = "INSERT INTO 'OrderItem' (OrderID, Item_code, Item_name, Quantity, Price, Total) VALUES (?, ?, ?, ?, ?, ?)";
 
-        try (Connection conn = DBConnection.getInstance().getConnection();
-             PreparedStatement ps = conn.prepareStatement(insertOrderItemQuery)) {
-
+        try (PreparedStatement ps = conn.prepareStatement(insertOrderItemQuery)) {
             for (OrderItem orderItem : cartItems) {
                 ps.setString(1, orderId);
                 ps.setString(2, orderItem.getItem_code());
@@ -278,10 +316,11 @@
             }
 
             int[] rowsInserted = ps.executeBatch();
+            if (rowsInserted.length != cartItems.size()) {
+                throw new SQLException("Failed to insert all order items.");
+            }
+
             System.out.println("Inserted " + rowsInserted.length + " order items.");
-
-        } catch (SQLException | ClassNotFoundException e) {
-            System.err.println("Error saving order items: " + e.getMessage());
         }
     }
 
@@ -292,4 +331,12 @@
         tblCart.refresh();
         // Clear other form fields as needed
     }
+
+    private void showAlert(Alert.AlertType alertType, String title, String message) {
+        Alert alert = new Alert(alertType);
+        alert.setTitle(title);
+        alert.setHeaderText(null);
+        alert.setContentText(message);
+        alert.showAndWait();
+    }
 }
Index: src/com/oragan/posSystem/view/OrderDetailsForm.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.MenuButton?>\r\n<?import javafx.scene.control.MenuItem?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane prefHeight=\"788.0\" prefWidth=\"1622.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.oragan.posSystem.controller.OrderDetailsFormController\">\r\n   <children>\r\n      <TextField layoutX=\"433.0\" layoutY=\"105.0\" prefHeight=\"39.0\" prefWidth=\"304.0\" promptText=\"Search\">\r\n         <font>\r\n            <Font size=\"15.0\" />\r\n         </font>\r\n      </TextField>\r\n      <MenuButton layoutX=\"746.0\" layoutY=\"105.0\" mnemonicParsing=\"false\" prefHeight=\"39.0\" prefWidth=\"148.0\" style=\"-fx-background-color: yellow; -fx-background-radius: 10; -fx-border-radius: 10;\" text=\"Order Id\">\r\n         <items>\r\n            <MenuItem mnemonicParsing=\"false\" text=\"Action 1\" />\r\n            <MenuItem mnemonicParsing=\"false\" text=\"Action 2\" />\r\n         </items>\r\n         <font>\r\n            <Font name=\"System Bold\" size=\"15.0\" />\r\n         </font>\r\n      </MenuButton>\r\n      <TableView layoutX=\"204.0\" layoutY=\"197.0\" prefHeight=\"286.0\" prefWidth=\"1180.0\">\r\n         <columns>\r\n            <TableColumn prefWidth=\"127.0\" text=\"Order ID\" />\r\n            <TableColumn prefWidth=\"153.0\" text=\"Customer ID\" />\r\n            <TableColumn prefWidth=\"162.0\" text=\"Customer Name\" />\r\n            <TableColumn prefWidth=\"144.0\" text=\"Date\" />\r\n            <TableColumn prefWidth=\"153.0\" text=\"Total\" />\r\n            <TableColumn prefWidth=\"129.0\" text=\"Discount\" />\r\n            <TableColumn prefWidth=\"177.0\" text=\"Amount\" />\r\n            <TableColumn prefWidth=\"134.0\" text=\"options\" />\r\n         </columns>\r\n      </TableView>\r\n      <Button layoutX=\"900.0\" layoutY=\"105.0\" mnemonicParsing=\"false\" prefHeight=\"39.0\" prefWidth=\"134.0\" style=\"-fx-background-color: white; -fx-background-radius: 8; -fx-border-radius: 10; -fx-border-color: #099e0c; -fx-border-width: 2;\" text=\"Search\" textFill=\"#099e0c\">\r\n         <font>\r\n            <Font size=\"16.0\" />\r\n         </font></Button>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/oragan/posSystem/view/OrderDetailsForm.fxml b/src/com/oragan/posSystem/view/OrderDetailsForm.fxml
--- a/src/com/oragan/posSystem/view/OrderDetailsForm.fxml	(revision 2537afc1b0e2abee1f65134136e61062ec98763b)
+++ b/src/com/oragan/posSystem/view/OrderDetailsForm.fxml	(date 1719257448785)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.MenuButton?>
-<?import javafx.scene.control.MenuItem?>
+<?import java.lang.String?>
+<?import javafx.collections.FXCollections?>
+<?import javafx.scene.control.ComboBox?>
 <?import javafx.scene.control.TableColumn?>
 <?import javafx.scene.control.TableView?>
 <?import javafx.scene.control.TextField?>
@@ -11,35 +11,28 @@
 
 <AnchorPane prefHeight="788.0" prefWidth="1622.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.oragan.posSystem.controller.OrderDetailsFormController">
    <children>
-      <TextField layoutX="433.0" layoutY="105.0" prefHeight="39.0" prefWidth="304.0" promptText="Search">
+      <TextField layoutX="433.0" layoutY="105.0" onAction="#txtSearchFieldOnAction" prefHeight="48.0" prefWidth="304.0" promptText="Search">
          <font>
             <Font size="15.0" />
          </font>
       </TextField>
-      <MenuButton layoutX="746.0" layoutY="105.0" mnemonicParsing="false" prefHeight="39.0" prefWidth="148.0" style="-fx-background-color: yellow; -fx-background-radius: 10; -fx-border-radius: 10;" text="Order Id">
-         <items>
-            <MenuItem mnemonicParsing="false" text="Action 1" />
-            <MenuItem mnemonicParsing="false" text="Action 2" />
-         </items>
-         <font>
-            <Font name="System Bold" size="15.0" />
-         </font>
-      </MenuButton>
-      <TableView layoutX="204.0" layoutY="197.0" prefHeight="286.0" prefWidth="1180.0">
+      <TableView fx:id="tblOrder" layoutX="204.0" layoutY="197.0" prefHeight="286.0" prefWidth="1180.0">
          <columns>
-            <TableColumn prefWidth="127.0" text="Order ID" />
-            <TableColumn prefWidth="153.0" text="Customer ID" />
-            <TableColumn prefWidth="162.0" text="Customer Name" />
-            <TableColumn prefWidth="144.0" text="Date" />
-            <TableColumn prefWidth="153.0" text="Total" />
-            <TableColumn prefWidth="129.0" text="Discount" />
-            <TableColumn prefWidth="177.0" text="Amount" />
-            <TableColumn prefWidth="134.0" text="options" />
+            <TableColumn fx:id="colOrderID" prefWidth="163.0" text="Order ID" />
+            <TableColumn fx:id="colCustomerID" prefWidth="170.0" text="Customer ID" />
+            <TableColumn fx:id="ColCustomerName" prefWidth="187.0" text="Customer Name" />
+            <TableColumn fx:id="colOrderDate" prefWidth="179.0" text="Date" />
+            <TableColumn fx:id="colOrderTotal" prefWidth="231.0" text="Total" />
+            <TableColumn prefWidth="249.0" text="options" />
          </columns>
       </TableView>
-      <Button layoutX="900.0" layoutY="105.0" mnemonicParsing="false" prefHeight="39.0" prefWidth="134.0" style="-fx-background-color: white; -fx-background-radius: 8; -fx-border-radius: 10; -fx-border-color: #099e0c; -fx-border-width: 2;" text="Search" textFill="#099e0c">
-         <font>
-            <Font size="16.0" />
-         </font></Button>
+      <ComboBox fx:id="cmbOrderID" layoutX="761.0" layoutY="105.0" onAction="#cmbSearchByOrderOnAction" prefHeight="48.0" prefWidth="192.0" promptText="Select Serch Option" style="-fx-background-color: FFC700; -fx-background-radius: 10;">
+         <items>
+            <FXCollections fx:factory="observableArrayList">
+               <String fx:id="cmbOrderIDs" fx:value="Order ID" />
+               <String fx:id="cmbCustomerName" fx:value="Customer Name" />
+            </FXCollections>
+         </items>
+      </ComboBox>
    </children>
 </AnchorPane>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"89dbfd71-98c4-49ba-a84d-1363c7f00fa7\" name=\"Changes\" comment=\"load to item details combobox\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/identifier.sqlite\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/identifier.sqlite\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/com/oragan/posSystem/view/PurchaseOrderForm.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/oragan/posSystem/view/PurchaseOrderForm.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/view/CustomerForm.fxml\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/controller/DashBoardFormController.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/.gitignore\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/controller/AddItemFormController.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/controller/CustomerFormController.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/controller/AddCustomerFormController.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/entity/Customer.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/com/oragan/posSystem/entity/Item.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"PhpWorkspaceProjectConfiguration\" interpreter_name=\"C:\\xampp\\php\\php.exe\" />\r\n  <component name=\"ProjectId\" id=\"2himxfBdo2WkUsgndzFgyBZefjj\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/com/oragan/posSystem/assets\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\oragan_pos_system\\src\\com\\oragan\\posSystem\\assets\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\oragan\\New folder\\oragan_pos_system\\oragan_pos_system\\src\\com\\oragan\\posSystem\\assets\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"AppInitializer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.oragan.posSystem.AppInitializer\" />\r\n      <module name=\"oragan_pos_system\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.oragan.posSystem.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.AppInitializer\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"89dbfd71-98c4-49ba-a84d-1363c7f00fa7\" name=\"Changes\" comment=\"\" />\r\n      <created>1718085521888</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1718085521888</updated>\r\n      <workItem from=\"1718085522653\" duration=\"13943000\" />\r\n      <workItem from=\"1718171185591\" duration=\"7644000\" />\r\n      <workItem from=\"1718186001443\" duration=\"14000\" />\r\n      <workItem from=\"1718433094581\" duration=\"7725000\" />\r\n      <workItem from=\"1718448794662\" duration=\"7382000\" />\r\n      <workItem from=\"1718456806607\" duration=\"111000\" />\r\n      <workItem from=\"1718521546240\" duration=\"3449000\" />\r\n      <workItem from=\"1718525322147\" duration=\"947000\" />\r\n      <workItem from=\"1718553376607\" duration=\"10197000\" />\r\n      <workItem from=\"1718773303291\" duration=\"5269000\" />\r\n      <workItem from=\"1718817192033\" duration=\"474000\" />\r\n      <workItem from=\"1718871580947\" duration=\"4930000\" />\r\n      <workItem from=\"1719072736814\" duration=\"1346000\" />\r\n      <workItem from=\"1719121256994\" duration=\"2071000\" />\r\n      <workItem from=\"1719160976520\" duration=\"4724000\" />\r\n      <workItem from=\"1719171186852\" duration=\"93000\" />\r\n      <workItem from=\"1719202840257\" duration=\"5813000\" />\r\n      <workItem from=\"1719225156680\" duration=\"9308000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"updated serch customer\">\r\n      <created>1718173089708</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718173089708</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"updated cmobox loading ids\">\r\n      <created>1718175036983</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718175036983</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated item form fuctions\">\r\n      <created>1718177705791</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718177705791</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"updated item form fuctions\">\r\n      <created>1718452113832</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718452113832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"updated customer form serch  for combox two options added\">\r\n      <created>1718561946930</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718561946930</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"updated customer form serch  for combox two options added\">\r\n      <created>1718776508484</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718776508484</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"load purchase order customer details\">\r\n      <created>1718778658045</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1718778658045</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"load to item details combobox\">\r\n      <created>1719171250825</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1719171250825</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"updated serch customer\" />\r\n    <MESSAGE value=\"updated cmobox loading ids\" />\r\n    <MESSAGE value=\"updated item form fuctions\" />\r\n    <MESSAGE value=\"updated customer form serch  for combox two options added\" />\r\n    <MESSAGE value=\"load purchase order customer details\" />\r\n    <MESSAGE value=\"load to item details combobox\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"load to item details combobox\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2537afc1b0e2abee1f65134136e61062ec98763b)
+++ b/.idea/workspace.xml	(date 1719292252848)
@@ -4,11 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="89dbfd71-98c4-49ba-a84d-1363c7f00fa7" name="Changes" comment="load to item details combobox">
+    <list default="true" id="89dbfd71-98c4-49ba-a84d-1363c7f00fa7" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/identifier.sqlite" beforeDir="false" afterPath="$PROJECT_DIR$/identifier.sqlite" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/oragan/posSystem/controller/OrderDetailsFormController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/oragan/posSystem/controller/OrderDetailsFormController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/oragan/posSystem/controller/PurchaseOrderFormController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/oragan/posSystem/view/PurchaseOrderForm.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/oragan/posSystem/view/PurchaseOrderForm.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/oragan/posSystem/view/OrderDetailsForm.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/oragan/posSystem/view/OrderDetailsForm.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -107,7 +108,8 @@
       <workItem from="1719160976520" duration="4724000" />
       <workItem from="1719171186852" duration="93000" />
       <workItem from="1719202840257" duration="5813000" />
-      <workItem from="1719225156680" duration="9308000" />
+      <workItem from="1719225156680" duration="18387000" />
+      <workItem from="1719291438323" duration="628000" />
     </task>
     <task id="LOCAL-00001" summary="updated serch customer">
       <created>1718173089708</created>
@@ -165,7 +167,14 @@
       <option name="project" value="LOCAL" />
       <updated>1719171250825</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="data base order ,orderItem created&#10;placeorder updated.">
+      <created>1719248607872</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1719248607872</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -190,7 +199,8 @@
     <MESSAGE value="updated customer form serch  for combox two options added" />
     <MESSAGE value="load purchase order customer details" />
     <MESSAGE value="load to item details combobox" />
-    <option name="LAST_COMMIT_MESSAGE" value="load to item details combobox" />
+    <MESSAGE value="data base order ,orderItem created&#10;placeorder updated." />
+    <option name="LAST_COMMIT_MESSAGE" value="data base order ,orderItem created&#10;placeorder updated." />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/com/oragan/posSystem/controller/OrderDetailsFormController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.oragan.posSystem.controller;\r\n\r\npublic class OrderDetailsFormController {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/oragan/posSystem/controller/OrderDetailsFormController.java b/src/com/oragan/posSystem/controller/OrderDetailsFormController.java
--- a/src/com/oragan/posSystem/controller/OrderDetailsFormController.java	(revision 2537afc1b0e2abee1f65134136e61062ec98763b)
+++ b/src/com/oragan/posSystem/controller/OrderDetailsFormController.java	(date 1719257420010)
@@ -1,5 +1,76 @@
 
 package com.oragan.posSystem.controller;
 
+import com.oragan.posSystem.db.DBConnection;
+import com.oragan.posSystem.entity.Customer;
+import com.oragan.posSystem.entity.Item;
+import com.oragan.posSystem.entity.Order;
+import com.oragan.posSystem.entity.OrderItem;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.event.ActionEvent;
+import javafx.scene.control.TableColumn;
+import javafx.scene.control.TableView;
+import javafx.scene.control.cell.PropertyValueFactory;
+import java.sql.*;
+
+
 public class OrderDetailsFormController {
+    public TableView tblOrder;
+    public TableColumn colOrderID;
+    public TableColumn colCustomerID;
+    public TableColumn ColCustomerName;
+    public TableColumn colOrderDate;
+    public TableColumn colOrderTotal;
+    private ObservableList<Order> orderList = FXCollections.observableArrayList();
+
+    public void initialize() {
+        // Initialize columns
+        colOrderID.setCellValueFactory(new PropertyValueFactory<>("orderID"));
+        colOrderDate.setCellValueFactory(new PropertyValueFactory<>("orderDate"));
+        colOrderTotal.setCellValueFactory(new PropertyValueFactory<>("total"));
+        colCustomerID.setCellValueFactory(new PropertyValueFactory<>("customer_Id"));
+
+        // Fetch data and populate the table
+        fetchOrdersFromDatabase();
+    }
+
+    private void fetchOrdersFromDatabase() {
+        orderList.clear();
+
+        String query = "SELECT OrderID, OrderDate, Total, CustomerID FROM 'Order'";
+
+        try (Connection conn = DBConnection.getInstance().getConnection();
+             PreparedStatement ps = conn.prepareStatement(query);
+             ResultSet rs = ps.executeQuery()) {
+
+            while (rs.next()) {
+                String orderID = rs.getString("OrderID");
+                Date orderDate = rs.getDate("OrderDate");
+                double total = rs.getDouble("Total");
+                String customerID = rs.getString("CustomerID");
+
+                Order order = new Order(orderID, orderDate, total, customerID);
+                orderList.add(order);
+                System.out.println(order);
+            }
+
+            // Set items in the table view
+            tblOrder.setItems(orderList);
+
+        } catch (SQLException | ClassNotFoundException e) {
+            e.printStackTrace(); // Handle or log exception
+        }
+    }
+
+
+    public void txtSearchFieldOnAction(ActionEvent actionEvent) {
+
+    }
+
+    public void cmbSearchByOrderOnAction(ActionEvent actionEvent) {
+    }
 }
+
+
+
