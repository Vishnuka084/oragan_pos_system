Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DataSourceManagerImpl\" format=\"xml\" multifile-model=\"true\">\r\n    <data-source source=\"LOCAL\" name=\"oragan_pos\" uuid=\"3645be09-b936-4bc4-926a-5d2de3ab0745\">\r\n      <driver-ref>sqlite.xerial</driver-ref>\r\n      <synchronize>true</synchronize>\r\n      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>\r\n      <jdbc-url>jdbc:sqlite:identifier.sqlite</jdbc-url>\r\n      <working-dir>$ProjectFileDir$</working-dir>\r\n    </data-source>\r\n    <data-source source=\"LOCAL\" name=\"oragan_pos\" uuid=\"e4373ae6-a2f7-45e6-adf8-8d1d221f01f3\">\r\n      <driver-ref>sqlite.xerial</driver-ref>\r\n      <synchronize>true</synchronize>\r\n      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>\r\n      <jdbc-url>jdbc:sqlite:identifier.sqlite</jdbc-url>\r\n      <working-dir>$ProjectFileDir$</working-dir>\r\n    </data-source>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
--- a/.idea/dataSources.xml	(revision d51fd4307b63b733dba0471cb376c909f7f86431)
+++ b/.idea/dataSources.xml	(date 1718045362011)
@@ -8,12 +8,5 @@
       <jdbc-url>jdbc:sqlite:identifier.sqlite</jdbc-url>
       <working-dir>$ProjectFileDir$</working-dir>
     </data-source>
-    <data-source source="LOCAL" name="oragan_pos" uuid="e4373ae6-a2f7-45e6-adf8-8d1d221f01f3">
-      <driver-ref>sqlite.xerial</driver-ref>
-      <synchronize>true</synchronize>
-      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>
-      <jdbc-url>jdbc:sqlite:identifier.sqlite</jdbc-url>
-      <working-dir>$ProjectFileDir$</working-dir>
-    </data-source>
   </component>
 </project>
\ No newline at end of file
Index: src/com/oragan/posSystem/controller/AddCustomerFormController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * authour By Pamindu Nawodya\r\n * Date:6/1/2024\r\n * Time:10:14 PM\r\n * Project Name:oragan_pos_system\r\n */\r\npackage com.oragan.posSystem.controller;\r\n\r\nimport com.oragan.posSystem.db.DBConnection;\r\nimport com.oragan.posSystem.entity.Customer;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport java.sql.*;\r\n\r\npublic class AddCustomerFormController {\r\n\r\n\r\n    public AnchorPane addCustomerFormContext;\r\n    public TextField txtCustomerId;\r\n    public TextField txtCustomerName;\r\n    public TextField txtCustomerAddress;\r\n    public TextField txtContactNumber;\r\n\r\n\r\n    public void initialize() {\r\n        setNewCustomerId();\r\n    }\r\n\r\n    private void setNewCustomerId() {\r\n        String newCustomerId = generateNewCustomerId();\r\n        if (newCustomerId != null) {\r\n            txtCustomerId.setText(newCustomerId);\r\n        } else {\r\n            System.out.println(\"Error generating new customer ID.\");\r\n        }\r\n    }\r\n\r\n\r\n    public void btnClearTxtFldOnAction(ActionEvent actionEvent) {\r\n        txtCustomerId.clear();\r\n        txtCustomerName.clear();\r\n        txtCustomerAddress.clear();\r\n        txtContactNumber.clear();\r\n    }\r\n\r\n    public void btnCustomerAddOnAction(ActionEvent actionEvent) {\r\n\r\n        String newCustomerId = generateNewCustomerId();\r\n        if (newCustomerId == null) {\r\n            System.out.println(\"Error generating new customer ID.\");\r\n            return;\r\n        }\r\n\r\n\r\n        String sql = \"INSERT INTO customers(Customer_Id, customer_name, address, contact_number) VALUES(?,?,?,?)\";\r\n        try {\r\n            // Get connection from the DBConnection singleton\r\n            Connection conn = DBConnection.getInstance().getConnection();\r\n            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {\r\n                pstmt.setString(1, newCustomerId);\r\n                pstmt.setString(2, txtCustomerName.getText());\r\n                pstmt.setString(3, txtCustomerAddress.getText());\r\n                pstmt.setString(4, txtContactNumber.getText());\r\n                pstmt.executeUpdate();\r\n                System.out.println(\"customer data add sucessfully\");\r\n            }\r\n        } catch ( ClassNotFoundException | SQLException e) {\r\n            System.out.println(\"Error adding customer to the database: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    //Auto Genarate ID Function\r\n\r\n    private String generateNewCustomerId() {\r\n        String sql = \"SELECT Customer_Id FROM customers ORDER BY Customer_Id DESC LIMIT 1\";\r\n        try {\r\n            Connection conn = DBConnection.getInstance().getConnection();\r\n            try (Statement stmt = conn.createStatement();\r\n                 ResultSet rs = stmt.executeQuery(sql)) {\r\n                if (rs.next()) {\r\n                    String lastId = rs.getString(\"Customer_Id\");\r\n                    if (lastId != null && lastId.length() > 1 && lastId.startsWith(\"C\")) {\r\n                        String numericPartStr = lastId.substring(1);\r\n                        try {\r\n                            int numericPart = Integer.parseInt(numericPartStr) + 1;\r\n                            return String.format(\"C%002d\", numericPart);\r\n                        } catch (NumberFormatException e) {\r\n                            System.out.println(\"Invalid numeric part in the last customer ID: \" + numericPartStr);\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        System.out.println(\"Invalid format of the last customer ID: \" + lastId);\r\n                        return null;\r\n                    }\r\n                } else {\r\n                    // If no records found, start with C01\r\n                    return \"C001\";\r\n                }\r\n            }\r\n        } catch (ClassNotFoundException | SQLException e) {\r\n            System.out.println(\"Error fetching last customer ID: \" + e.getMessage());\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/oragan/posSystem/controller/AddCustomerFormController.java b/src/com/oragan/posSystem/controller/AddCustomerFormController.java
--- a/src/com/oragan/posSystem/controller/AddCustomerFormController.java	(revision d51fd4307b63b733dba0471cb376c909f7f86431)
+++ b/src/com/oragan/posSystem/controller/AddCustomerFormController.java	(date 1718046535385)
@@ -7,11 +7,9 @@
 package com.oragan.posSystem.controller;
 
 import com.oragan.posSystem.db.DBConnection;
-import com.oragan.posSystem.entity.Customer;
 import javafx.event.ActionEvent;
 import javafx.scene.control.TextField;
 import javafx.scene.layout.AnchorPane;
-
 import java.sql.*;
 
 public class AddCustomerFormController {
@@ -85,7 +83,7 @@
                         String numericPartStr = lastId.substring(1);
                         try {
                             int numericPart = Integer.parseInt(numericPartStr) + 1;
-                            return String.format("C%002d", numericPart);
+                            return String.format("C%03d", numericPart);
                         } catch (NumberFormatException e) {
                             System.out.println("Invalid numeric part in the last customer ID: " + numericPartStr);
                             return null;
@@ -95,7 +93,7 @@
                         return null;
                     }
                 } else {
-                    // If no records found, start with C01
+                    // If no records found, start with C001
                     return "C001";
                 }
             }
@@ -106,8 +104,7 @@
     }
 
 
-
-    }
+}
 
 
 
